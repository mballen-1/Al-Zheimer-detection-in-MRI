function varargout = action1(varargin)
% ACTION1 MATLAB code for action1.fig
%      ACTION1, by itself, creates a new ACTION1 or raises the existing
%      singleton*.
%
%      H = ACTION1 returns the handle to a new ACTION1 or the handle to
%      the existing singleton*.
%
%      ACTION1('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in ACTION1.M with the given input arguments.
%
%      ACTION1('Property','Value',...) creates a new ACTION1 or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before action1_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to action1_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help action1

% Last Modified by GUIDE v2.5 01-Nov-2015 12:56:59

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @action1_OpeningFcn, ...
                   'gui_OutputFcn',  @action1_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before action1 is made visible.
function action1_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to action1 (see VARARGIN)

% Choose default command line output for action1
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes action1 wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = action1_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on selection change in popupmenu1.
function popupmenu1_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns popupmenu1 contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu1


% --- Executes during object creation, after setting all properties.
function popupmenu1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



% --- Executes on button press in Process Image
function pushbutton2_Callback(hObject, eventdata, handles)

[FileName, PathName, FilterIndex] = uigetfile('*.png');



h = msgbox({'Processing Image','15 seconds left Aproximately','thanks for using'}, 'Please Wait...','help')
pause(2)



rgb = imread(FileName);
gr = rgb2gray(rgb);

axes(handles.axes1)
imshow(rgb)

se = strel('disk', 150);
I = imtophat(gr, se);
axes(handles.axes7)
imshow(I)



I2 = imadjust(I);
% axes(handles.axes3)
% imshow(I2)


level = graythresh(I2);
BW = im2bw(I2,level);
%figure, imshow(BW), title('BW');
axes(handles.axes3);
imshow(BW);

C =~BW;
% axes(handles.axes5);
% imshow(C);
%figure, imshow(C), title('C'); 

D = -bwdist(C);
D(C) = -Inf;

L = watershed(D);
Wi = label2rgb(L, 'hot', 'w' );

axes(handles.axes4);
imshow(Wi);

level1 = graythresh(Wi);
BW1 = im2bw(Wi,level1);

% axes(handles.axes8);
% imshow(BW1);

im = rgb;
im(L==0)=0;
axes(handles.axes5);
imshow(im);

axes(handles.axes6);
imshow(rgb);

[K, Ne] = bwlabel(BW1);
prop = regionprops(K);
hold on

for n = 1:size(prop, 1)
    rectangle('Position', prop(n).BoundingBox,'EdgeColor','g','LineWidth',2)
end

num = 10000;
tam = find([prop.Area]<num);

for n = 1:size(tam, 2)
    rectangle('Position', prop(tam(n)).BoundingBox,'EdgeColor','r','LineWidth',2)
end

bw = BW;
for n=1: size(tam,2)
    W = round(prop(tam(n)).BoundingBox);
    bw(W(2):W(2)+W(4),W(1):W(1)+W(3))=0;
end
    
axes(handles.axes8);
imshow(bw);


%[FileName,PathName,FilterIndex] = uigetfile('*.png');



% hObject    handle to pushbutton2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% --- Executes on key press with focus on pushbutton2 and none of its controls.
%function pushbutton2_KeyPressFcn(hObject, eventdata, handles,img)
%axes(handles.axes7)
%imshow(img)

    
% hObject    handle to pushbutton2 (see GCBO)
% eventdata  structure with the following fields (see MATLAB.UI.CONTROL.UICONTROL)
%	Key: name of the key that was pressed, in lower case
%	Character: character interpretation of the key(s) that was pressed
%	Modifier: name(s) of the modifier key(s) (i.e., control, shift) pressed
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton3.
function pushbutton3_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton4.
function pushbutton4_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton5.
function pushbutton5_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton6.
function pushbutton6_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton7.
function pushbutton7_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton8.
function pushbutton8_Callback(hObject, eventdata, handles)

% hObject    handle to pushbutton8 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton9.
function pushbutton9_Callback(hObject, eventdata, handles)
cla(handles.axes1, 'reset')
cla(handles.axes7, 'reset')
cla(handles.axes3, 'reset') 
cla(handles.axes4, 'reset') 
cla(handles.axes5, 'reset') 
cla(handles.axes6, 'reset') 
cla(handles.axes7, 'reset') 
cla(handles.axes8, 'reset') 
cla(handles.axes9, 'reset')

% hObject    handle to pushbutton9 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
